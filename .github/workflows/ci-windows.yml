---
name: CI-Windows
on: [push, pull_request]

jobs:
  build:
    name: MSYS2 Build and Test
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - sys: mingw64
            env: x86_64
          - sys: mingw32
            env: i686
          - sys: ucrt64
            env: ucrt-x86_64

    steps:
      - name: Install prerequisites
        uses: msys2/setup-msys2@v2
        with:
          # cSpell:ignore msystem
          msystem: ${{ matrix.sys }}
          install: >-
            mingw-w64-${{ matrix.env }}-libgcrypt
            mingw-w64-${{ matrix.env }}-gcc
            mingw-w64-${{ matrix.env }}-cmake
            mingw-w64-${{ matrix.env }}-ninja
            mingw-w64-${{ matrix.env }}-doxygen
            mingw-w64-${{ matrix.env }}-graphviz
            mingw-w64-${{ matrix.env }}-ghostscript
            mingw-w64-${{ matrix.env }}-texlive-bin
            diffutils
            groff

      - uses: actions/checkout@v3

      - name: Configure
        run: cmake --preset default --fresh

      - name: Build
        run: cmake --build  --preset srecord-executables

      - name: Smoke test
        run: cmake --build  --preset srecord-executables-version

      - name: Build test prerequisites
        run: cmake --build  --preset prepare-test

      - name: Test
        working-directory: build
        run: ctest --output-on-failure --output-junit ctest.junit.xml

      - name: Build all
        working-directory: build
        run: ninja

      - name: Create ZIP package
        working-directory: build
        run: cpack -G ZIP

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: msys2-${{ matrix.env }}-packages
          path: build/srecord-*.*
